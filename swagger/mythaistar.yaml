swagger: '2.0'
info:
  version: v1
  title: My Thai Star API
host: 'localhost:8080'
schemes:
  - http
paths:
  /api/Dish/Search:
    post:
      tags:
        - Dish
      summary: Gets the  list of available dishes regarding the filter options
      operationId: Dish_Search
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: filterView
          in: body
          description: >-
            Contains the criteria values to perform the search. Case of null or
            empty values will return the full set of dishes.
          required: true
          schema:
            $ref: '#/definitions/FilterView'
      responses:
        '200':
          description: Ok. The search process has beencompleted with no error.
          schema:
            type: array
            items:
              $ref: '#/definitions/DishView'
        '401':
          description: Unathorized. Autentication fail
        '403':
          description: Forbidden. Authorization error.
        '500':
          description: Internal Server Error. The search process ended with error.
  /api/Mail/Reservation/UpdateInvitation:
    get:
      tags:
        - Mail
      summary: Method to accept or decline an invitation
      operationId: Mail_Reservation/UpdateInvitation
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: guestToken
          in: query
          description: Token generated in the reservation process where guests are invited.
          required: true
          type: string
        - name: guestResponse
          in: query
          description: >-
            True : The user accepts the invitation. False: The user declines the
            invitation.
          required: true
          type: boolean
      responses:
        '204':
          description: 'Ok, no content. The search process has beencompleted with no error.'
          schema:
            type: object
        '400':
          description: >-
            Bad request. The invitation cannot be cancelled because the request
            is 10 minutes before the event after being accepted before.
        '401':
          description: Unathorized. Autentication fail
        '403':
          description: Forbidden. Authorization error.
        '500':
          description: Internal Server Error. The search process ended with error.
  /api/Mail/Reservation/CancelInvitation:
    get:
      tags:
        - Mail
      summary: "Method to cancel the invitation. Once is cancelled the system will send a cancelation email to all guests.\r\nAn invitation only can be canceled if the cancelation request is not send an hour before the reservation"
      operationId: Mail_Reservation/CancelInvitation
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: reservationToken
          in: query
          description: >-
            Token generated in the reservation process where guests are invited.
            Mandatory
          required: true
          type: string
      responses:
        '204':
          description: 'Ok, no content. Invitation canceled'
          schema:
            type: object
        '400':
          description: >-
            Bad Request. Incorrect Invitation token given or parse error.The
            invitation cannot be cancelled because the request is an hour before
            the event.
        '401':
          description: Unathorized. Autentication fail
        '403':
          description: Forbidden. Authorization error.
        '500':
          description: Internal Server Error. The search process ended with error.
  /api/Order/Order:
    post:
      tags:
        - Order
      summary: >-
        Order the order. Given an order view, the server side will prepare the
        different order lines.
      operationId: Order_Order
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: orderView
          in: body
          description: >-
            The model of the ordert to be processed on the server side. The
            InvitationToken field is mandatory.
          required: true
          schema:
            $ref: '#/definitions/OrderView'
      responses:
        '201':
          description: Ok. Created
          schema:
            type: object
        '400':
          description: Bad Request. No Invitation token given.
        '401':
          description: Unathorized. Autentication fail
        '403':
          description: Forbidden. Authorization error.
        '500':
          description: Internal Server Error. The search process ended with error.
  /api/Order/Delete:
    delete:
      tags:
        - Order
      summary: >-
        Method to delete the order. Once the order is deleted the system will
        send a cancelation email to all guests.
      operationId: Order_Delete
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: reservationToken
          in: query
          description: ''
          required: true
          type: string
      responses:
        '204':
          description: 'Ok, no content. Invitation canceled'
          schema:
            type: object
        '400':
          description: Bad Request. Incorrect Invitation token given or parse error.
        '401':
          description: Unathorized. Autentication fail
        '403':
          description: Forbidden. Authorization error.
        '500':
          description: Internal Server Error. The search process ended with error.
  /api/Reservation/Reservation:
    post:
      tags:
        - Reservation
      summary: >-
        Method to make a reservation with potentiel guests. The method returns
        the reservation token with the format:
        {(CRS_|GRS_)}{now.Year}{now.Month:00}{now.Day:00}{_}{MD5({Guest-email}{now.Year}{now.Month:00}{now.Day:00}{now.Hour:00}{now.Minute:00}{now.Second:00})}
      operationId: Reservation_Reservation
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: reservationView
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/ReservationView'
      responses:
        '201':
          description: Ok.
          schema:
            type: string
        '400':
          description: Bad request. Parser data error.
        '401':
          description: Unathorized. Autentication fail
        '403':
          description: Forbidden. Authorization error.
        '500':
          description: Internal Server Error. The search process ended with error.
definitions:
  FilterView:
    description: ''
    type: object
    properties:
      catgories:
        description: ''
        type: array
        items:
          $ref: '#/definitions/CategoryView'
      maxPrice:
        format: double
        type: number
      minLikes:
        format: int32
        type: integer
      searchBy:
        type: string
      showOrder:
        format: int32
        type: integer
      isFav:
        type: boolean
      sortBy:
        type: string
  CategoryView:
    type: object
    properties:
      id:
        format: int64
        type: integer
      name:
        type: string
      description:
        type: string
      group:
        format: int32
        type: integer
      selected:
        type: boolean
      showOrder:
        format: int32
        type: integer
  DishView:
    description: Dish entity which represents a single dish structure from menu
    type: object
    properties:
      id:
        format: int64
        type: integer
      name:
        type: string
      description:
        type: string
      price:
        format: double
        type: number
      image:
        $ref: '#/definitions/ImageView'
      extras:
        type: array
        items:
          $ref: '#/definitions/ExtraIngredientView'
      favourite:
        $ref: '#/definitions/FavouriteView'
  ImageView:
    description: >-
      Structure to define the image object. The content if contains binary data
      must be represented in Base64String
    type: object
    properties:
      name:
        type: string
      content:
        type: string
      type:
        description: Binary or Url
        type: string
      extension:
        type: string
  ExtraIngredientView:
    type: object
    properties:
      id:
        format: int64
        type: integer
      name:
        type: string
      selected:
        type: boolean
      price:
        format: double
        type: number
  FavouriteView:
    type: object
    properties:
      isFav:
        type: boolean
      likes:
        format: int32
        type: integer
  OrderView:
    description: >-
      InvitationToken contains the direct Reservation Token or Invitation token
      dependig on the type of the reservation
    type: object
    properties:
      lines:
        description: Contains the lines of the chosen order from client.
        type: array
        items:
          $ref: '#/definitions/OrderLineView'
      invitationId:
        description: >-
          contains the direct Reservation Token or Invitation token dependig on
          the type of the reservation.
        type: string
  OrderLineView:
    type: object
    properties:
      idDish:
        format: int64
        type: integer
      extras:
        description: >-
          Contains a list with the id of the extra ingredients that have been
          selected by the client
        type: array
        items:
          format: int64
          type: integer
      amount:
        format: int32
        type: integer
      comment:
        type: string
  ReservationView:
    type: object
    properties:
      date:
        type: string
      type:
        $ref: '#/definitions/ReservationType'
      name:
        type: string
      email:
        type: string
      assistants:
        format: int32
        type: integer
      guestList:
        type: array
        items:
          type: string
  ReservationType:
    type: object
    properties:
      name:
        type: string
